(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{533:function(e,v,_){"use strict";_.r(v);var a=_(55),t=Object(a.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"构建输出格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#构建输出格式"}},[e._v("#")]),e._v(" 构建输出格式")]),e._v(" "),_("h2",{attrs:{id:"打包格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#打包格式"}},[e._v("#")]),e._v(" 打包格式")]),e._v(" "),_("h3",{attrs:{id:"esm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#esm"}},[e._v("#")]),e._v(" esm")]),e._v(" "),_("p",[e._v("特征：由于是静态的，所以可以做 tree-shaking")]),e._v(" "),_("p",[e._v("使用方式：")]),e._v(" "),_("ol",[_("li",[e._v("浏览器通过 "),_("code",[e._v('<script type="module" />')]),e._v(" 引入")]),e._v(" "),_("li",[e._v("npm 使用")])]),e._v(" "),_("p",[e._v("如何产生：")]),e._v(" "),_("ol",[_("li",[e._v("rollup 声明 target 为 esm 或者 babel 编译之后生成一个新的目录")]),e._v(" "),_("li",[e._v("package.json 中声明 "),_("code",[e._v("module")]),e._v("，指向 "),_("code",[e._v("esm")])])]),e._v(" "),_("p",[e._v("副作用：根据库的使用情况考虑配置 sideEffect")]),e._v(" "),_("h3",{attrs:{id:"umd"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#umd"}},[e._v("#")]),e._v(" umd")]),e._v(" "),_("p",[e._v("使用方式：")]),e._v(" "),_("ol",[_("li",[e._v("浏览器通过 "),_("code",[e._v('<script src="url" />')]),e._v(" 引入")]),e._v(" "),_("li",[e._v("浏览器通过 requirejs 或 seajs 引入")])]),e._v(" "),_("p",[e._v("如何产生：")]),e._v(" "),_("ol",[_("li",[e._v("rollup 或者 webpack 声明 target 为 "),_("code",[e._v("umd")])]),e._v(" "),_("li",[e._v("package.json 中声明 "),_("code",[e._v("unpkg")]),e._v("，指向对应文件")])]),e._v(" "),_("h3",{attrs:{id:"commonjs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[e._v("#")]),e._v(" commonjs")]),e._v(" "),_("p",[e._v("使用方式：")]),e._v(" "),_("ol",[_("li",[e._v("npm 使用")]),e._v(" "),_("li",[e._v("node 端使用")])]),e._v(" "),_("p",[e._v("如何产生：")]),e._v(" "),_("ol",[_("li",[e._v("rollup 或者 webpack 声明 target 为 "),_("code",[e._v("commonjs")])]),e._v(" "),_("li",[e._v("package.json 中声明 "),_("code",[e._v("main")]),e._v("，指向对应文件")])]),e._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),_("ol",[_("li",[e._v("对外提供组件时，同时提供 esm ，commonjs， umd 这 3 种方式，并且在 package 中对应的字段进行声明，以确保这个包可以兼容多环境。")]),e._v(" "),_("li",[e._v("尽可能提供 esm 模式，并且如果这个组件没有影响外部变量时，设置 sideEffect 为 false， 让使用方可以最大的 tree-shaking 。对于公用的依赖包，将其写入 peerDependencies 中。")]),e._v(" "),_("li",[e._v("若要提供 umd 模式， 在打包时， 将对应公用依赖写入 external 剔除对应依赖。")])])])}),[],!1,null,null,null);v.default=t.exports}}]);