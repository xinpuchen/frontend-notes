(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{510:function(t,e,r){"use strict";r.r(e);var o=r(55),v=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"遍历的几种方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#遍历的几种方式"}},[t._v("#")]),t._v(" 遍历的几种方式")]),t._v(" "),r("h2",{attrs:{id:"方法对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法对比"}},[t._v("#")]),t._v(" 方法对比")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("方法")]),t._v(" "),r("th",[t._v("特性")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("for ... in")]),t._v(" "),r("td",[t._v("遍历对象自身的和继承的可枚举属性(不含 Symbol 属性)")])]),t._v(" "),r("tr",[r("td",[t._v("Object.keys(obj)")]),t._v(" "),r("td",[t._v("返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含 Symbol 属性)")])]),t._v(" "),r("tr",[r("td",[t._v("Object.getOwnPropertyNames(obj)")]),t._v(" "),r("td",[t._v("返回一个数组,包括对象自身的所有可枚举属性(不含 Symbol 属性)")])]),t._v(" "),r("tr",[r("td",[t._v("Object.getOwnPropertySymbols(obj)")]),t._v(" "),r("td",[t._v("返回一个数组,包含对象自身的所有 Symbol 属性")])]),t._v(" "),r("tr",[r("td",[t._v("Reflect.ownKeys(obj)")]),t._v(" "),r("td",[t._v("返回一个数组,包含对象自身的所有(不枚举、可枚举和 Symbol)属性")])]),t._v(" "),r("tr",[r("td",[t._v("Reflect.enumerate(obj)")]),t._v(" "),r("td",[t._v("返回一个 Iterator 对象,遍历对象自身的和继承的所有可枚举属性(不含 Symbol 属性)")])])])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("ol",[r("li",[t._v("只有 Object.getOwnPropertySymbols(obj)和 Reflect.ownKeys(obj)可以拿到 Symbol 属性")]),t._v(" "),r("li",[t._v("只有 Reflect.ownKeys(obj)可以拿到不可枚举属性")])])])}),[],!1,null,null,null);e.default=v.exports}}]);